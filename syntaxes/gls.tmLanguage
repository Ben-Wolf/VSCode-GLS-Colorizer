<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>scopeName</key>
        <string>source.gls</string>

        <key>fileTypes</key>
        <array>
            <string>gls</string>
        </array>

        <key>name</key>
        <string>GLS file</string>

        <key>patterns</key>
        <array>
            <!-- GLS Comments -->
            <dict>
                <key>match</key>
                <string>comment block start|comment block end</string>
                <key>name</key>
                <string>constant.numeric</string>
            </dict>
            <dict>
                <key>match</key>
                <string>comment line(.*?)\n</string>
                <key>name</key>
                <string>constant.numeric</string>
            </dict>
            <dict>
                <key>match</key>
                <string>comment block(.*?)\n</string>
                <key>name</key>
                <string>constant.numeric</string>
            </dict>
            <dict>
                <key>match</key>
                <string>comment doc start|comment doc end</string>
                <key>name</key>
                <string>constant.numeric</string>
            </dict>
           <dict>
                <key>match</key>
                <string>comment doc tag</string>
                <key>name</key>
                <string>constant.numeric</string>
            </dict> 
            <!-- GLS Commands -->
            <dict>
                <key>match</key>
                <string>\b(?i:(for each start|array initialize|array length|block end|break|class end|class start|comment doc tag|comment line|concatenate|constructor start|constructor end|continue|dictionary contains key|dictionary keys|dictionary new|dictionary new end|dictionary new start|dictionary pair|dictionary type|else if start|else start|enum|enum end|enum member|enum start|file end|file start|for each end|for each key start|for each pair start|for each pair start|for each start|for numbers end|for numbers start|function end|function start|if end|if start|import|index|interface end|interface method|interface start|is not null|is null|lambda body|list initialize|list length|list pop|list push|list type|literal|main end|main start|math absolute|member variable| member variable declare|native call|not|operation|operator|parenthesis|print|rest parameters|return|string format|string index|string length|super constructor|this|type|value|variable|variable inline|variable start|while end|while start))\b</string>
                <key>name</key>
                <string>keyword</string>
            </dict>
            <!-- Brackets -->
            <dict>
                <key>match</key>
                <string>{|}</string>
                <key>name</key>
                <string>entity.other.attribute-name</string>
            </dict>  
            <!-- Quotes with " -->
            <dict>
                <key>match</key>
                <string>"(.*?)"</string>
                <key>name</key>
                <string>string.tag</string>
            </dict>
            <!-- Quotes with ' -->
            <dict>
                <key>match</key>
                <string>'(.*?)'</string>
                <key>name</key>
                <string>string.type</string>
            </dict>
            <!-- GLS Colon -->
            <dict>
                <key>match</key>
                <string>:</string>
                <key>name</key>
                <string>entity.other.inherited-class</string>
            </dict>
             <!--After Colon, Color is too close to bracket color. Goal is to make all text not after colon ERROR-text-->
            <dict>
                <key>match</key>
                <string>^(?:(?!for each start|array initialize|array length|block end|break|class end|class start|comment doc tag|comment line|concatenate|constructor start|constructor end|continue|dictionary contains key|dictionary keys|dictionary new|dictionary new end|dictionary new start|dictionary pair|dictionary type|else if start|else start|enum|enum end|enum member|enum start|file end|file start|for each end|for each key start|for each pair start|for each pair start|for each start|for numbers end|for numbers start|function end|function start|if end|if start|import|index|interface end|interface method|interface start|is not null|is null|lambda body|list initialize|list length|list pop|list push|list type|literal|main end|main start|math absolute|member variable| member variable declare|native call|not|operation|operator|parenthesis|print|rest parameters|return|string format|string index|string length|super constructor|this|type|value|variable|variable inline|variable start|while end|while start).)*$</string>
                <key>name</string>
                <string>invalid.illegal</string>
            </dict> 
        </array>
        <key>uuid</key>
        <string>3ce37e3a-6023-4f4c-bb60-182b8231faa2</string>
    </dict>
</plist>